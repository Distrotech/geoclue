<!DOCTYPE node PUBLIC "-//freedesktop//DTD D-BUS Object Introspection 1.0//EN"
"http://www.freedesktop.org/standards/dbus/1.0/introspect.dtd">

<!--
    GeoClue 2.0 Interface Specification

    Copyright (C) 2013 Red Hat, Inc.
-->

<node>

  <!--
      org.freedesktop.GeoClue2.Manager:
      @short_description: The GeoClue service manager

      This is the interface you use to talk to main GeoClue2 manager object at
      path "/org/freedesktop/GeoClue2/Manager". The only thing you do with this
      interface is to call org.freedesktop.GeoClue2.Manager.GetClient() on it
      to get your application specific client object.
  -->
  <interface name="org.freedesktop.GeoClue2.Manager">

    <!--
        GetClient:
        @client: The path for newly created client object

        Retrieves a client object which can only be used by the calling
        application only.
    -->
    <method name="GetClient">
      <arg name="client" type="o" direction="out"/>
    </method>

    <!--
        AddAgent:

        An API for user authorization agents to register themselves. Each agent
        is responsible for the user it is running as. Application developers
        can and should simply ignore this API.
    -->
    <method name="AddAgent" />
  </interface>

  <!--
      org.freedesktop.GeoClue2.Client:
      @short_description: The Application-specific client API

      This is the interface you use to retrieve location information and receive
      location update signals from GeoClue service. You get the client object to
      use this interface on from org.freedesktop.GeoClue2.Manager.GetClient()
      method.
  -->
  <interface name="org.freedesktop.GeoClue2.Client">
    <!--
        Location:

        Current location as path to a #org.freedesktop.GeoClue2.Location object.
    -->
    <property name="Location" type="o" access="read"/>

    <!--
        DistanceThreshold:

        Contains the current distance threshold in meters. This value is used
        by the service when it gets new location info. If the distance moved is
        below the threshold, it won't emit the LocationUpdated signal.
    -->
    <property name="DistanceThreshold" type="u" access="readwrite"/>

    <!--
        Start:

        Start receiving events about the current location. Applications should
        hook-up to #org.freedesktop.GeoClue2.Client::LocationUpdated signal
        before calling this method.
    -->
    <method name="Start"/>

    <!--
        Stop:

        Stop receiving events about the current location.
    -->
    <method name="Stop"/>

    <!--
        LocationUpdated:
        @old: old location as path to a #org.freedesktop.GeoClue2.Location object
        @new: new location as path to a #org.freedesktop.GeoClue2.Location object

        The signal is emitted every time the location changes.
        The client should set the DistanceThreshold property to control how
        often this signal is emitted.
    -->
    <signal name="LocationUpdated">
      <arg name="old" type="o"/>
      <arg name="new" type="o"/>
    </signal>
  </interface>

  <!--
      org.freedesktop.GeoClue2.Location:
      @short_description: The Location interface

      This is the interface you use on location objects.
  -->
  <interface name="org.freedesktop.GeoClue2.Location">

    <!--
        Latitude:

        The latitude of the location, in degrees.
    -->
    <property name="Latitude" type="d" access="read"/>

    <!--
        Longitude:

        The longitude of the location, in degrees.
    -->
    <property name="Longitude" type="d" access="read"/>

    <!--
        Accuracy:

        The accuracy of the location fix, in meters.
    -->
    <property name="Accuracy" type="d" access="read"/>

    <!--
        Description:

        A human-readable description of the location, if available.

        WARNING: Applications should not rely on this property since not all
        sources provide a description. If you really need a description (or
        more details) about current location, use a reverse-geocoding API, e.g
        geocode-glib.
    -->
    <property name="Description" type="s" access="read"/>
  </interface>
</node>
